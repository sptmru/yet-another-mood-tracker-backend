permissions:
  contents: write

name: CI Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        node: ['20.11.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm install
      - name: Check for ESLint errors
        run: npm run lint -- --max-warnings=0
  prettier-format:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    strategy:
      matrix:
        node: ['20.11.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm install
      - name: Format code
        run: npm run format
  build-and-push:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    needs: [lint, prettier-format]
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read version from package.json
        id: read_version
        run: |
          version=$(jq -r '.version' package.json)
          echo "Current version: $version"
          echo "version=$version" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          new_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV
          echo "::set-output name=new_version::$new_version"

      - name: Update package.json version
        run: |
          jq --arg new_version "$new_version" '.version=$new_version' package.json > temp.json && mv temp.json package.json
          cat package.json
          
      - name: Commit updated version
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "Increment version to $new_version"
          git push
      
      - name: Log in to Docker Hub
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push app Docker image
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/yet-another-mood-tracker-backend:${{ steps.increment_version.outputs.new_version }}
  
      - name: Set up QEMU for ARM builds
        uses: docker/setup-qemu-action@v3

      - name: Build and push app Docker image for ARM
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/yet-another-mood-tracker-backend:${{ steps.increment_version.outputs.new_version }}-arm
